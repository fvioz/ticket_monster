---
services:
  api:
    image: golang:1.24-alpine
    container_name: api
    working_dir: /app
    expose:
      - "8080"
    ports:
      - "8080:8080"
    command: ["go", "run", "main.go"]
    environment:
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    volumes:
      - ./api:/app
    networks:
      - front-end
      - back-end

  # Fetcher service
  fetcher:
    image: golang:1.24-alpine
    container_name: fetcher
    working_dir: /app
    command: ["go", "run", "main.go"]
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    volumes:
      - ./fetcher:/app
    networks:
      - back-end

  # Processors service
  processors:
    image: golang:1.24-alpine
    container_name: processors
    working_dir: /app
    command: ["go", "run", "main.go"]
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    volumes:
      - ./processors:/app
    networks:
      - back-end

  # Database Service
  db:
    image: postgres:17-alpine
    container_name: db
    restart: always
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/:/docker-entrypoint-initdb.d
    networks:
      - back-end

  # Redis Service
  redis:
    image: redis:8.0.1-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - back-end

networks:
  front-end:
    driver: bridge
  back-end:

volumes:
  pgdata:
